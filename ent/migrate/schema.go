// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// JobsColumns holds the columns for the "jobs" table.
	JobsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "date", Type: field.TypeString},
		{Name: "status", Type: field.TypeString, Default: "PENDING"},
		{Name: "batch", Type: field.TypeInt, Default: 1000},
		{Name: "last_processed_id", Type: field.TypeUint64, Default: 0},
		{Name: "total_processed", Type: field.TypeUint, Default: 0},
		{Name: "data", Type: field.TypeJSON},
	}
	// JobsTable holds the schema information for the "jobs" table.
	JobsTable = &schema.Table{
		Name:       "jobs",
		Columns:    JobsColumns,
		PrimaryKey: []*schema.Column{JobsColumns[0]},
	}
	// PersonalAccountsColumns holds the columns for the "personal_accounts" table.
	PersonalAccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "account_id", Type: field.TypeUint64},
		{Name: "type", Type: field.TypeString, Size: 20},
		{Name: "balance", Type: field.TypeFloat32, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,4)", "postgres": "numeric"}},
		{Name: "interest", Type: field.TypeFloat32, Default: 0, SchemaType: map[string]string{"mysql": "decimal(10,4)", "postgres": "numeric"}},
	}
	// PersonalAccountsTable holds the schema information for the "personal_accounts" table.
	PersonalAccountsTable = &schema.Table{
		Name:       "personal_accounts",
		Columns:    PersonalAccountsColumns,
		PrimaryKey: []*schema.Column{PersonalAccountsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "personalaccount_account_id_type",
				Unique:  true,
				Columns: []*schema.Column{PersonalAccountsColumns[3], PersonalAccountsColumns[4]},
			},
		},
	}
	// PersonalAccountTransactionsColumns holds the columns for the "personal_account_transactions" table.
	PersonalAccountTransactionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "type", Type: field.TypeString, Size: 20},
		{Name: "amount", Type: field.TypeFloat32, Default: 0, SchemaType: map[string]string{"mysql": "decimal(10,4)", "postgres": "numeric"}},
		{Name: "balance", Type: field.TypeFloat32, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,4)", "postgres": "numeric"}},
		{Name: "description", Type: field.TypeString},
		{Name: "status", Type: field.TypeString, Default: "PENDING"},
		{Name: "personal_account_id", Type: field.TypeUint64},
	}
	// PersonalAccountTransactionsTable holds the schema information for the "personal_account_transactions" table.
	PersonalAccountTransactionsTable = &schema.Table{
		Name:       "personal_account_transactions",
		Columns:    PersonalAccountTransactionsColumns,
		PrimaryKey: []*schema.Column{PersonalAccountTransactionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "personal_account_transactions_personal_accounts_transactions",
				Columns:    []*schema.Column{PersonalAccountTransactionsColumns[8]},
				RefColumns: []*schema.Column{PersonalAccountsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		JobsTable,
		PersonalAccountsTable,
		PersonalAccountTransactionsTable,
	}
)

func init() {
	PersonalAccountTransactionsTable.ForeignKeys[0].RefTable = PersonalAccountsTable
}
